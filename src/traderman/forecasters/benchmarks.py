
# --- ----------------------------------------------------------------------- #
# --- File: Execution --------------------------------------------------- --- #
# --- Mode: RandoBen ---------------------------------------------------- --- #
# --- ----------------------------------------------------------------------- #

import sys
import os
import torch

from traderman.forecasters.forecast import Forecaster

# --- ------------------------------------------------------------------- --- #
# --- ------------------------------------------------------------------- --- #
# --- ------------------------------------------------------------------- --- #

class Randomizer(Forecaster):
    """
    """
     
    # ----------------------------------------------------------------------- #
    # ----------------------------------------------------------------------- #
    
    def __init__(self, seed:int) -> None:
        """
        """

        self.seed = seed
        
    # ----------------------------------------------------------------------- #
    # ----------------------------------------------------------------------- #
    
    def predict(self, predict_type:str, verbose:bool = False, **kwargs) -> None:
        """
        """
        
        if predict_type == "class": 
        
            i_index = torch.randint(len(kwargs["classes"]), (1,))
            forecasted = kwargs["classes"][i_index]

            return forecasted 

        if verbose:
            print(f" -- Forecast: {forecasted}")

